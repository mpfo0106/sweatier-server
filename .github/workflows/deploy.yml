name: Deploy To EC2

on:
  push:
    branches:
      - develop

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Github Repository 파일 불러오기
        uses: actions/checkout@v4

      - name: Node 설치
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: 의존성(라이브러리) 설치
        run: npm ci

      - name: 테스트 코드 실행
        run: npm run test

      - name: AWS Resource에 접근할 수 있게 AWS credentials 설정
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-northeast-2
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: ECR에 로그인하기
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Docker 이미지 생성 및 푸시
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: sweatier-server
          IMAGE_TAG: ${{ github.sha }}
        run: |
          echo "${ECR_REGISTRY}/${REPOSITORY}:${IMAGE_TAG}" > image.txt
          docker build -t ${ECR_REGISTRY}/${REPOSITORY}:${IMAGE_TAG} .
          docker push ${ECR_REGISTRY}/${REPOSITORY}:${IMAGE_TAG}

      - name: 배포 스크립트에 실행 권한 추가
        run: chmod +x scripts/start-server.sh

      - name: 배포 파일 압축하기
        run: tar -czvf deploy.tar.gz appspec.yml scripts image.txt

      - name: S3에 배포 파일 업로드
        run: |
          aws s3 cp deploy.tar.gz s3://${{ secrets.AWS_S3_BUCKET_NAME }}/deploy.tar.gz --region ap-northeast-2

      - name: .env 파일 동적 생성
        run: |
          cat << EOF > .env
          AWS_REGION=${{ secrets.AWS_REGION }}
          AWS_S3_BUCKET_NAME=${{ secrets.AWS_S3_BUCKET_NAME }}
          AWS_S3_ACCESS_KEY_ID=${{ secrets.AWS_S3_ACCESS_KEY_ID }}
          AWS_S3_SECRET_ACCESS_KEY=${{ secrets.AWS_S3_SECRET_ACCESS_KEY }}
          EOF
          echo '${{ secrets.ENV }}' >> .env

      - name: Code Deploy를 활용해 EC2에 프로젝트 코드 배포
        run: |
          aws deploy create-deployment \
            --application-name sweatier-server \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --deployment-group-name Production \
            --s3-location bucket=${{ secrets.AWS_S3_BUCKET_NAME }},bundleType=tar,key=deploy.tar.gz
